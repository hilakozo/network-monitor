שאלה2:
גלשתי לאתר אחר ממה שהיה כתוב בעבודה, כיוון שהוא לא היה HTTP :
כשהסנפתי את הרשת לאתר נראו הפרוטוקולים הבאים 

1. UDP (User Datagram Protocol): הפרוטוקול מאפשר העברה מהירה של פאקטות. הפרוטוקול לא מבטיח את המסירה או שלמותן של הפאקטות, מה שהופך אותו למהיר יותר אך אמין פחות מ-TCP. הוא משמש בדרך כלל עבור שירותים שבהם המהירות היא קריטית ואיבוד נתונים מסויים מקובל, כגון סטרימינג ומשחקים.
במקרה של האתר, הפרוטוקול יכול לשמש לסרטונים בפרסומות או ל"שידור החי" לדוגמא.

2. QUIC (חיבורי אינטרנט מהירים UDP): QUIC הוא פרוטוקול שתוכנן על ידי Google. הוא בנוי על גבי UDP ומיועד לתמוך בחיבורים בין שתי נקודות קצה באינטרנט, בצורה מאובטחת ויעילה. QUIC משפר את הביצועים על ידי הפחתת זמן האחזור של החיבור וההעברה, והוא משמש כעת עבור HTTP/3, הגרסה האחרונה של HTTP.

3. DNS (Domain Name System): מצמיד דומיניים לכתובות IP ברשת. התקשורת מתבצעת דרך שרת DNS שמכיר את כתובת הIP ומצמיד אותם לדומיין המבוקש.

4. TCP : הפרוטוקול מאפשר מסירה אמינה, מסודרת ונבדקת שגיאות (Checksum) של תקשורת בין שתי נקודות המתקשרות בHTTP. על כל פאקטה מתבצע אישור קבלה (SYN\SYN ACK\ACK).

5. TLSv1.3 (Transport Layer Security גרסה 1.3): זוהי הגרסה העדכנית ביותר של פרוטוקול TLS, שנועד לספק תקשורת מאובטחת באינטרנט. אתרי אינטרנט משתמשים ב-TLS כדי לאבטח את כל התקשורת בין השרתים ודפדפני האינטרנט שלהם, תוך הקפדה על בקשות ותגובות HTTP בתוך מנות מוצפנות ליצירת HTTPS.

7. HTTP (פרוטוקול העברת היפרטקסט): HTTP הוא הפרוטוקול הבסיסי באינטרנט המשמש להעברת מסמכים, כגון קובצי HTML והרכיבים המשויכים אליהם (כמו תמונות וסקריפטים). HTTP יכול לפעול על TCP וגם על UDP וכאשר מאובטח באמצעות TLS, הוא מכונה HTTPS.
בנוסף, פרוטוקול HTTP שייך לשכבה הגבוהה במודול, כך שכדי להשתמש בפרוטוקול זה יש צורך בחיבור אמין בין המשתמש לשרת, דוגמת חיבור לאינטרנט




הנספה בעת כניסה ל www.ynet.com :
לא היו שגיאות במהלך הקלטה, אבל כן היה שוני במידע שהיה בהקלטה הזו לעומת המידע שהיה קיים בכניסה לאתר הראשון.
בהקלטה הראשונה יכולתי לראות נתונים על הדף, וכן יכולתי לראות נתונים על המחשב שלי שמועברים בפקאטות.
לעומת זאת בהקלטה השנייה, הכל היה תחת הצפנה - הפרוטוקל TLS היה אחראי על ההצפנה ולכן לא היה ניתן לראות את אותם הפרמטרים, שכן ווינאט מוצפן והאתר HTTP איננו מוצפן.


תיאור הקוד בתמצתיות :
על הקוד:

•	הקובץ קונפיגורציה קיים בשביל להגדיר – כל כמה זמן התוכנית תרוץ>> עשיתי את זה בקובץ נפרד כדי שיהיה אפשר לשלוט בזה ממקום אחד.
.
ה main של התוכנית  מכיל בתוכו שתי פונקציות נוספות מלבד הMAIN :
	parse_args()`: מאפשרת למשתמש לשנות את הפרמטרים של ספי ההתראה
	on_closing() מנהלת את תהליך סגירת החלונות של התוכנית 

ה class `NetworkMonitor` מיועדת לניטור תעבורת רשת וניהול התראות בהתבסס על תנאים ספציפיים. להלן סקירה קצרה של השיטות שלה:
1`__init__`.קונסטרקטור 
2. _get_network_io_per_second:מחשב תעבורת רשת (פקטות שנשלחו והתקבלו) על פני מרווח זמן מסוים. זה גם מטפל בשגיאות אם ממשק הרשת לא נמצא.
3. _send_alert: קובע אם לשלוח התראה על סמך ספירת התעבורה, הפונקציה  מול ספים גבוהים ונמוכים מוגדרים מראש, ומעקב אחר הפסקות חוזרות ונשנות של הרשת.
4. draw_graph:עדכון תצוגה גרפית של תעבורת הרשת באמצעות ספירת התעבורה.
5. `run`: מכיל את הלולאה הראשית שמניעה את תהליך הניטור, שליפת נתוני תעבורה, שליחת התראות ועדכון הגרף, עד לקבלת אות עצירה.
מחלקה זו משלבת ניטור רשת בזמן אמת עם פונקציות חזותיות והתראות לניהול תנאי תעבורת הרשת.


 מחלקת `AlertWindow` היא רכיב GUI פשוט שנבנה עם Tkinter להצגת התראות בחלון נפרד. להלן סקירה קצרה של השיטות והפונקציונליות שלה:
1. _init__: קונסטרוקטור המאתחל מופע `AlertWindow` עם הפניה לחלון היישום הראשי (`root`). הפניה זו משמשת לניהול המיקום והפונקציונליות של חלון ההתראה ביחס לחלון הראשי.
2. `show_alert:שיטה זו מציגה הודעת התראה בחלון חדש. אם חלון התראה כבר פתוח, הוא הורס את הקיים לפני יצירת חלון חדש כדי להבטיח שרק ההודעה האחרונה תוצג. השיטה יוצרת חלון `Toplevel` ,אשר מעלה את ההתראה ומציג את ההודעה המתאימה למצב  הרשת.  בנוסף הטא כולל כפתור "dismiss" שסוגר את חלון ההתראה בעת לחיצה.

מחלקה זו שימושית עבור יישומים שצריכים להציג הודעות חולפות למשתמש, כגון התראות  או הודעות שגיאה (לצורך העניין – הרשת נפלה


המחלקה 'SimpleNetworkGraph' מיועדת להציג את שיעורי הפקטות של הרשת בצורה גרפית באמצעות matplotlib ו-Tkinter. להלן סקירה תמציתית של המבנה והשיטות שלו:
1. `__init__`: קונסטרקטור ליצירת הגרף
2. `update_graph: שיטה זו מעדכנת את הגרף בנתוני קצב הפקטות. הוא מוסיף את קצב הפקטות הנכנסות והיוצאות לרשימה המאחסנת את הערכים הללו.

מחלקה זו מספקת למעשה ייצוג חזותי בזמן אמת של קצבי פקטות  ברשת, ומתעדכנת באופן דינמי עם כניסת נתונים חדשים. זה שימושי לניטור יישומים שבהם ראיית מגמות ושינויים בצורה גרפית יכולה לעזור בהבנת התנהגות הרשת.


