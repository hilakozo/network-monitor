שאלה 3:
גלשתי לאתר אחר ממה שהיה כתוב בעבודה, כיוון שהוא לא היה HTTP :
כאשר אתה נכנס לאתר שפועל על HTTP וצופה בפרוטוקולים שונים במהלך רחרוח ברשת, כל פרוטוקול ממלא תפקיד ספציפי בניהול ואבטחת העברת הנתונים. הנה הסבר על כל פרוטוקול שהזכרת:

1. UDP (User Datagram Protocol): הפרוטוקול מאפשר העברה מהירה של פאקטות. הפרוטוקול לא מבטיח את המסירה או שלמותן של הפאקטות, מה שהופך אותו למהיר יותר אך אמין פחות מ-TCP. הוא משמש בדרך כלל עבור שירותים שבהם המהירות היא קריטית ואיבוד נתונים מסויים מקובל, כגון סטרימינג ומשחקים.
במקרה של האתר, הפרוטוקול יכול לשמש לסרטונים בפרסומות או ל"שידור החי" לדוגמא.

2. QUIC (חיבורי אינטרנט מהירים UDP): QUIC הוא פרוטוקול שתוכנן על ידי Google. הוא בנוי על גבי UDP ומיועד לתמוך בחיבורים בין שתי נקודות קצה דרך האינטרנט, בצורה מאובטחת ויעילה. QUIC משפר את הביצועים על ידי הפחתת זמן האחזור של החיבור וההעברה, והוא משמש כעת עבור HTTP/3, הגרסה האחרונה של HTTP.

3. DNS (Domain Name System): מצמיד דומיניים לכתובות IP ברשת. התקשורת מתבצעת דרך שרת DNS שמכיר את כתובת הIP ומצמיד אותם לדומיין המבוקש.

4. TCP : הפרוטוקול מאפשר מסירה אמינה, מסודרת ונבדקת שגיאות (Checksum) של תקשורת בין שתי נקודות המתקשרות בHTTP. על כל פאקטה מתבצע אישור קבלה (SYN\SYN ACK\ACK).

5. TLSv1.3 (Transport Layer Security גרסה 1.3): זוהי הגרסה העדכנית ביותר של פרוטוקול TLS, שנועד לספק תקשורת מאובטחת באינטרנט. אתרי אינטרנט משתמשים ב-TLS כדי לאבטח את כל התקשורת בין השרתים ודפדפני האינטרנט שלהם, תוך הקפדה על בקשות ותגובות HTTP בתוך מנות מוצפנות ליצירת HTTPS.

7. HTTP (פרוטוקול העברת היפרטקסט): HTTP הוא הפרוטוקול הבסיסי באינטרנט המשמש להעברת מסמכים, כגון קובצי HTML והרכיבים המשויכים אליהם (כמו תמונות וסקריפטים). HTTP יכול לפעול על TCP וגם על UDP וכאשר מאובטח באמצעות TLS, הוא מכונה HTTPS.
בנוסף, פרוטוקול HTTP שייך לשכבה הגבוהה במודול, כך שכדי להשתמש בפרוטוקול זה יש צורך בחיבור אמין בין המשתמש לשרת, דוגמת חיבור לאינטרנט




כניסה ל www.ynet.com :
לא היו שגיאות במהלך הקלטה, אבל כן היה שוני במידע שהיה בהקלטה הזו לעומת המידע שהיה קיים בכניסה לאתר הראשון.
בהקלטה הראשונה יכולתי לראות נתונים על הדף, וכן יכולתי לראות נתונים על המחשב שלי שמועברים בפקאטות.
לעומת זאת בהקלטה השנייה, הכל היה תחת הצפנה - הפרוטוקל TLS היה אחראי על ההצפנה ולכן לא היה ניתן לראות את אותם הפרמטרים, שכן ווינאט מוצפן והאתר HTTP איננו מוצפן.

מדוע בחרתי לממש בצורה הזו: - 
בהתחלה ממשתי את הקוד בצורה כזו שנגיד הnetwork  io   היה בתוך הMAIN ולאחר מכן העברתי את הקוד לצורה קצת ממודלת >> לclass 
ניסיתי לבצע קוד כמה שיותר גנרי ופחות מסורבל 
קיימים כמה באגים שלא התעסקתי בהם כי בסה"כ הדבהרים רצו :
באג UI – עם החולניות 
לא ניסתי להרריץ את עליית המערכת בזמן הדלקת מחשב, פשוט כתבתי crone  שמראה איפה הסביבה שלי מתקיימת 

 



















באילו בעיות נתקעתי :
1. יעילות - בתרגיל השני לקח המון זמן כדי שהתרגיל יחזור מהר יחסית, ואז ייעלתי את זה - להסביר!!
2. התוכנית הראשונה הפסיקה לפעול כשהגרף נסגר באופן יזום ולכן חילקתי אותה בTHREDים כדי שזה יקרה באופן מקבילי ולא יהיה תלוי אחד בשני 
3. התאמה בין מערכות הפעלה – העברתי את המערכת גם לסביבת לינוקס וגם לסביבת ווינדוס ובצעתי התאמות מסוימות בהתאם 
4. 



איך בצעתי DEBUG לקוד ?
פ
